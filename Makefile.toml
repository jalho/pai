extend= [
  { path = "coverage_grcov.makefile.toml" }
]


[env]
docargs = "--target-dir=output|--quiet|--no-deps|--target=${@}"
buildargs = "--target-dir=output|--features=plugins|--features=syscalls|--target=${@}"
clippyargs = "--target-dir=output|--no-deps|--all-targets|--all-features|--target=${@}"


# Various fixes which should be executed before publish
[tasks.fixfmt]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--", "--emit=files"]

[tasks.fixclippy]
command = "cross"
install_crate = "clippy"
args = ["clippy", "@@split(clippyargs,|)", "--fix"]


# Various checks which should be executed before publish
[tasks.checkfmt]
install_crate = "rustfmt"
command = "cargo"
args = ["fmt", "--quiet", "--check"]


[tasks.checkclippy]
command = "cross"
install_crate = "clippy"
args = ["clippy", "@@split(clippyargs,|)", "--message-format=json", "--", "-Dwarnings"]

[tasks.clippy]
command = "cross"
install_crate = "clippy"
args = ["clippy", "@@split(clippyargs,|)"]

[tasks.coverage]
alias="coverage_grcov"

[tasks.bench]
command = "cargo"
args = ["bench", "--features=syscalls"]


# Various tasks which expect target argument(s)

[tasks.drytest]
command = "cross"
args = ["test", "@@split(buildargs,|)", "--no-run"]

[tasks.testnative]
command = "cross"
args = ["test", "@@split(buildargs,|)"]

[tasks.test]
command = "rust-script"
install_crate = "rust-script"
args = [
	"${CARGO_MAKE_WORKING_DIRECTORY}/scripts/test-runner.rs",
	"--config",
	"${CARGO_MAKE_WORKING_DIRECTORY}/runner_config.toml",
	"@@split(buildargs,|)",
]

[tasks.build]
command = "cross"
args = ["build", "@@split(buildargs,|)"]

[tasks.release]
command = "cross"
args = ["build", "@@split(buildargs,|)", "--release"]

# Doc also expects target argument
[tasks.docpublic]
command = "cross"
args = ["doc", "@@split(docargs,|)"]

[tasks.docprivate]
command = "cross"
args = ["doc", "@@split(docargs,|)", "--document-private-items"]


[tasks.clean]
command = "cargo"
args = ["clean"]
